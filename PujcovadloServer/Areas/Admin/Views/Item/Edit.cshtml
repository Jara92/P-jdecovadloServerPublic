@using PujcovadloServer.Business.Enums
@using Syncfusion.EJ2
@using Syncfusion.EJ2.Buttons
@using Syncfusion.EJ2.Calendars
@using Syncfusion.EJ2.DropDowns
@using Syncfusion.EJ2.Inputs
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model PujcovadloServer.Areas.Admin.Requests.ItemRequest
@inject IStringLocalizer<ItemStatus> StatusLocalizer

@{
    Layout = "_Layout";
    ViewData["Title"] = Localizer["Editing item"].Value + ": " + Model.Name;
}

<form asp-action="Edit" id="item-form">
    <input type="hidden" asp-for="Id"/>

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group mb-3">
                    <ejs-textbox ejs-for="Name" id="name" placeholder="@Localizer["Name"].Value"
                                 floatLabelType="Always">
                    </ejs-textbox>
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <ejs-textbox ejs-for="Alias" id="alias" placeholder="@Localizer["Alias"].Value"
                                 floatLabelType="Always">
                    </ejs-textbox>
                    <span asp-validation-for="Alias" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <ejs-textbox ejs-for="Description" id="description" placeholder="@Localizer["Description"].Value"
                                 floatLabelType="Always" multiline="true">
                    </ejs-textbox>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <ejs-textbox ejs-for="Parameters" id="parameters" placeholder="@Localizer["Parameters"].Value"
                                 floatLabelType="Always" multiline="true">
                    </ejs-textbox>
                    <span asp-validation-for="Parameters" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <ejs-numerictextbox id="pricePerDay" ejs-for="PricePerDay" step="1" min="0"
                                        format="###.## K훾"
                                        floatLabelType="Always"
                                        placeholder="@Localizer["Price per day"].Value">
                    </ejs-numerictextbox>
                    <span asp-validation-for="PricePerDay" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <ejs-numerictextbox id="refundableDeposit" ejs-for="RefundableDeposit" step="1" min="0"
                                        format="###.## K훾"
                                        floatLabelType="Always"
                                        placeholder="@Localizer["Refundable deposit"].Value">
                    </ejs-numerictextbox>
                    <span asp-validation-for="RefundableDeposit" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <ejs-numerictextbox id="purchasePrice" ejs-for="PurchasePrice" step="1" min="0"
                                        format="###.## K훾"
                                        floatLabelType="Always"
                                        placeholder="@Localizer["Purchase price"].Value">
                    </ejs-numerictextbox>
                    <span asp-validation-for="PurchasePrice" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <ejs-numerictextbox id="sellingPrice" ejs-for="SellingPrice" step="1" min="0"
                                        format="###.## K훾"
                                        floatLabelType="Always"
                                        placeholder="@Localizer["Selling price"].Value">
                    </ejs-numerictextbox>
                    <span asp-validation-for="SellingPrice" class="text-danger"></span>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group mb-3">
                    <ejs-dropdownlist id="dlOwnerId" placeholder="@Localizer["Owner"].Value"
                                      popupHeight="220px" ejs-for="OwnerId" floatLabelType="Always"
                                      allowFiltering="true" filtering="onOwnerFiltering" filterType="Contains" ignoreAccent="true" ignoreCase="true">
                        <e-data-manager adaptor="UrlAdaptor" url="@Url.Action("IndexFilter", "User")" crossDomain="false"></e-data-manager>
                        <e-dropdownlist-fields value="Id" text="Name"></e-dropdownlist-fields>
                    </ejs-dropdownlist>
                    <span asp-validation-for="OwnerId" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <ejs-dropdownlist id="dlStatus" dataSource="@ViewBag.Statuses" placeholder="@Localizer["Status"].Value"
                                      popupHeight="220px" ejs-for="Status" floatLabelType="Always">
                        <e-dropdownlist-fields value="Id" text="Name"></e-dropdownlist-fields>
                    </ejs-dropdownlist>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <ejs-multiselect id="dlCategories" placeholder="@Localizer["Categories"].Value"
                                     query="new ej.data.Query().sortBy('Id').select(['Id', 'Name']).take(20)"
                                     popupHeight="500px" ejs-for="Categories" floatLabelType="Always"
                                     allowFiltering="true" ignoreCase="true" ignoreAccent="true" filterType="Contains">
                        <e-data-manager adaptor="UrlAdaptor" url="@Url.Action("IndexFilter", "ItemCategory")" crossDomain="false"></e-data-manager>
                        <e-multiselect-fields value="Id" text="Name"></e-multiselect-fields>
                    </ejs-multiselect>
                    <span asp-validation-for="Categories" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <ejs-multiselect id="dlTags" placeholder="@Localizer["Tags"].Value"
                                     query="new ej.data.Query().sortBy('Id').select(['Id', 'Name']).take(20)"
                                     popupHeight="500px" ejs-for="Tags" floatLabelType="Always" ignoreCase="true"
                                     allowFiltering="true" ignoreAccent="true" filterType="Contains">
                        <e-data-manager adaptor="UrlAdaptor" url="@Url.Action("IndexFilter", "ItemTag")" crossDomain="false"></e-data-manager>
                        <e-multiselect-fields value="Id" text="Name"></e-multiselect-fields>
                    </ejs-multiselect>
                    <span asp-validation-for="Tags" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <ejs-datetimepicker id="createdAt" ejs-for="CreatedAt" placeholder="@Localizer["Created at"].Value"
                                        format="d.M.yyyy hh:mm" floatLabelType="Always">
                    </ejs-datetimepicker>
                    <span asp-validation-for="CreatedAt" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <ejs-datetimepicker id="updatedAt" ejs-for="UpdatedAt" placeholder="@Localizer["Updated at"].Value"
                                        format="d.M.yyyy hh:mm" floatLabelType="Always">
                    </ejs-datetimepicker>
                    <span asp-validation-for="UpdatedAt" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <ejs-datetimepicker id="approvedAt" ejs-for="ApprovedAt" placeholder="@Localizer["Approved at"].Value"
                                        format="d.M.yyyy hh:mm" floatLabelType="Always">
                    </ejs-datetimepicker>
                    <span asp-validation-for="ApprovedAt" class="text-danger"></span>
                </div>
            </div>

            <div class="col-md-4">
                <div class="row">
                    @foreach (var image in ViewBag.Images)
                    {
                        <div class="col-4">
                            <a href="@image.Url" target="_blank">
                                <img src="@image.Url" class="img-fluid" alt="Item image">
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</form>

<div class="container-fluid">
    <div class="btn-toolbar form-toolbar mb-md-4 mb-sm-2">
        <ejs-button id="save" cssClass="e-primary me-2" iconCss="bi bi-save" content="@Localizer["Save changes"].Value"
                    isPrimary="true">
        </ejs-button>

        <ejs-button id="back" cssClass="e-link me-2" iconCss="bi bi-x" content="@Localizer["Cancel"].Value"></ejs-button>

        <script>
            document.getElementById('back').onclick = function () {
                window.location.href='@Url.Action("Index", "Item")';
            };
            
            document.getElementById('save').onclick = function () {
                document.getElementById('item-form').submit();
            };
        </script>
    </div>
</div>

@section Scripts {
    <script>
        function onOwnerFiltering(e) {
            // Get the owner DropDownList instance
            let dlOwnerId = document.getElementById('dlOwnerId').ej2_instances[0];
            
            // Create a new query
            let query = new ej.data.Query();
            
            // Apply filter only if the text is not empty
            if(e.text !== ''){
                let firstName, lastName;
                firstName = lastName = e.text;
                
                // Split the name so we can filter by first and last name
                let split = e.text.split(' ');
                
                // If there are more than one word, use the first as first name and the rest as last name
                if(split.length > 1){
                    firstName = split[0];
                    lastName = split.slice(1).join(' '); // Join the rest of the words as last name
                } 
                
                // Apply the filter
                query = query.where(
                    new ej.data.Predicate("FirstName", dlOwnerId.filterType, firstName, dlOwnerId.ignoreCase, dlOwnerId.ignoreAccent)
                    .or("LastName", dlOwnerId.filterType, lastName, dlOwnerId.ignoreCase, dlOwnerId.ignoreAccent));
            }
            
            // Take only N records
            query.take(20);
            
            // Update the data
            e.updateData(dlOwnerId.dataSource, query);
        }
    </script>

    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}